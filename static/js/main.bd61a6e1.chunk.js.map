{"version":3,"sources":["serviceWorker.js","Components/GamepadIcon.js","Components/GamepadItem.js","App.js","theme.js","index.js"],"names":["Boolean","window","location","hostname","match","GamepadIcon","xmlns","x","y","enableBackground","version","viewBox","width","height","xmlSpace","fill","d","cx","cy","r","useStyles","makeStyles","theme","root","justifyContent","alignItems","paper","padding","button","GamepadItem","props","classes","useState","delay","duration","weakMagnitude","strongMagnitude","isNeedRepeat","pressedButtons","state","setState","pulseInterval","setPulseInterval","isStarted","setIsStarted","instance","pulse","pulseParams","startDelay","console","log","vibrationActuator","playEffect","handleStart","handleStop","setInterval","clearInterval","handleChange","name","value","useEffect","Grid","container","spacing","className","Paper","justify","FormHelperText","style","marginBottom","textAlign","id","Typography","gutterBottom","Slider","aria-labelledby","defaultValue","step","min","max","onChange","e","item","xs","FormControlLabel","control","Switch","checked","disabled","label","Button","variant","onClick","LinearProgress","color","header","backgroundColor","minHeight","display","flexDirection","fontSize","progress","margin","gamepad","App","gamepads","setGamepads","handleGamepadConnected","index","handleGamepadDisconnected","addEventListener","removeEventListener","length","map","key","createMuiTheme","overrides","MuiSlider","thumb","track","rail","palette","type","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kIChBS,SAASC,IACpB,OACI,yBACIC,MAAM,6BACNC,EAAE,IACFC,EAAE,IACFC,iBAAiB,wBACjBC,QAAQ,MACRC,QAAQ,oBACRC,MAAM,QACNC,OAAO,QACPC,SAAS,YAET,0BACIC,KAAK,UACLC,EAAE,qcAEN,4BAAQC,GAAG,SAASC,GAAG,SAASC,EAAE,IAAIJ,KAAK,YAC3C,4BAAQE,GAAG,SAASC,GAAG,SAASC,EAAE,IAAIJ,KAAK,YAC3C,4BAAQE,GAAG,SAASC,GAAG,SAASC,EAAE,IAAIJ,KAAK,YAC3C,4BAAQE,GAAG,SAASC,GAAG,SAASC,EAAE,IAAIJ,KAAK,YAC3C,4BAAQE,GAAG,SAASC,GAAG,SAASC,EAAE,IAAIJ,KAAK,YAC3C,4BAAQE,GAAG,SAASC,GAAG,SAASC,EAAE,IAAIJ,KAAK,YAC3C,0BACIA,KAAK,UACLC,EAAE,2OAEN,0BACID,KAAK,UACLC,EAAE,uRCtBlB,IAAMI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFX,MAAO,QACPY,eAAgB,SAChBC,WAAY,UAEhBC,MAAO,CACHC,QAAS,oBAEbC,OAAQ,CACJhB,MAAO,aAIA,SAASiB,EAAYC,GAChC,IAAMC,EAAUX,IADuB,EAGbY,mBAAS,CAC/BC,MAAO,EACPC,SAAU,IACVC,cAAe,EACfC,gBAAiB,EACjBC,cAAc,EACdC,eAAgB,KATmB,mBAGhCC,EAHgC,KAGzBC,EAHyB,OAYGR,mBAAS,MAZZ,mBAYhCS,EAZgC,KAYjBC,EAZiB,OAaLV,oBAAS,GAbJ,mBAahCW,EAbgC,KAarBC,EAbqB,KAgB/BC,EAAaf,EAAbe,SACAZ,EAAkEM,EAAlEN,MAAOC,EAA2DK,EAA3DL,SAAUC,EAAiDI,EAAjDJ,cAAeC,EAAkCG,EAAlCH,gBAAiBC,EAAiBE,EAAjBF,aAEnDS,EAAQ,WACV,IAAMC,EAAc,CAChBC,WAAYf,EACZC,SAAUA,EACVC,cAAeA,EACfC,gBAAiBA,GAGrB,OADAa,QAAQC,IAAI,8CAA+CH,GACpDF,EAASM,kBAAkBC,WAAW,cAAeL,IAG1DM,EAAc,WACZhB,GACAiB,IACAR,IACAJ,EAAiBa,YAAYT,EAAO,GAAMZ,IAC1CU,GAAa,IAEbE,KAIFQ,EAAa,WACfb,GAAiBe,cAAcf,GAC/BG,GAAa,IAGXa,EAAe,SAACC,EAAMC,GACxBnB,EAAS,2BAAKD,GAAN,kBAAcmB,EAAOC,KACzBhB,IACAW,IACAD,MAqBR,OAjBAO,qBAAU,WAWN,OAAO,WAEHnB,GAAiBe,cAAcf,MAEpC,IAGC,kBAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAWjC,EAAQR,MAC3C,kBAAC0C,EAAA,EAAD,CAAOD,UAAWjC,EAAQL,OACtB,kBAACmC,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,UACpB,kBAAC7D,EAAD,OAGJ,kBAAC8D,EAAA,EAAD,CAAgBC,MAAO,CAAEC,aAAc,OAAQC,UAAW,WAAazB,EAAS0B,IAEhF,kBAACC,EAAA,EAAD,CAAYC,cAAY,GAAxB,UAAiCxC,EAAjC,OACA,kBAACyC,EAAA,EAAD,CAAQC,kBAAgB,eAChBhB,MAAO1B,EAAO2C,aAAc,EAAGC,KAAM,GAAIC,IAAK,EAAGC,IAAK,IACtDC,SAAU,SAACC,EAAGtB,GAAJ,OAAcF,EAAa,QAASE,MAEtD,kBAACa,EAAA,EAAD,CAAYC,cAAY,GAAxB,aAAoCvC,EAApC,OACA,kBAACwC,EAAA,EAAD,CAAQC,kBAAgB,eAChBhB,MAAOzB,EAAU0C,aAAc,IAAMC,KAAM,IAAKC,IAAK,IAAKC,IAAK,IAC/DC,SAAU,SAACC,EAAGtB,GAAJ,OAAcF,EAAa,WAAYE,MAEzD,kBAACa,EAAA,EAAD,CAAYC,cAAY,GAAxB,kBACA,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,eAChBhB,MAAOxB,EAAeyC,aAAc,EAAGC,KAAM,IAAMC,IAAK,EAAGC,IAAK,EAChEC,SAAU,SAACC,EAAGtB,GAAJ,OAAcF,EAAa,gBAAiBE,MAE9D,kBAACa,EAAA,EAAD,CAAYC,cAAY,GAAxB,oBACA,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,eAChBhB,MAAOvB,EAAiBwC,aAAc,EAAGC,KAAM,IAAMC,IAAK,EAAGC,IAAK,EAClEC,SAAU,SAACC,EAAGtB,GAAJ,OAAcF,EAAa,kBAAmBE,MAEhE,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWjC,EAAQR,KAAMwC,QAAS,GAC9C,kBAACF,EAAA,EAAD,CAAMqB,MAAI,EAACC,GAAI,GACX,kBAACC,EAAA,EAAD,CACIC,QAAS,kBAACC,EAAA,EAAD,CAAQC,QAASlD,EAAcmD,SAAU7C,EAAWqC,SAAU,kBAAMvB,EAAa,gBAAiBpB,MAC3GoD,MAAM,qBAGd,kBAAC5B,EAAA,EAAD,CAAMqB,MAAI,EAACC,GAAI,GACX,kBAACO,EAAA,EAAD,CAAQ1B,UAAWjC,EAAQH,OAAQ+D,QAAQ,YAAYC,QAASvC,EAAamC,SAAU7C,GAAvF,UAEJ,kBAACkB,EAAA,EAAD,CAAMqB,MAAI,EAACC,GAAI,GACX,kBAACO,EAAA,EAAD,CAAQ1B,UAAWjC,EAAQH,OAAQ+D,QAAQ,YAAYC,QAAStC,EAAYkC,UAAW7C,GAAvF,SAEJ,kBAACkB,EAAA,EAAD,CAAMqB,MAAI,EAACC,GAAI,IACTxC,GACE,kBAACkD,EAAA,EAAD,CAAgBC,MAAM,kBCpIlD,IAAM1E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyE,OAAQ,CACJC,gBAAiB,UACjBC,UAAW,QACXC,QAAS,OACTC,cAAe,SACf1E,WAAY,SACZD,eAAgB,SAChB4E,SAAU,qBACVN,MAAO,SAEXvE,KAAM,CACFX,MAAO,SACPY,eAAgB,SAChBC,WAAY,UAEhBC,MAAO,CACHC,QAAS,QAEb0E,SAAU,CACNC,OAAQ,cAEZC,QAAS,CACLD,OAAQ,YAqDDE,MAjDf,WACI,IAAMzE,EAAUX,IADL,EAGqBY,mBAAS,IAH9B,mBAGJyE,EAHI,KAGMC,EAHN,KAKLC,EAAyB,SAAC1B,GAC5BhC,QAAQC,IAAR,qCAA2C+B,EAAEsB,QAAQK,QACrDF,EAAY,GAAD,mBAAKD,GAAL,CAAexB,EAAEsB,YAG1BM,EAA4B,SAAC5B,GAC/BhC,QAAQC,IAAR,0CAAgD+B,EAAEsB,QAAQK,eACnDH,EAASxB,EAAEsB,QAAQK,OAC1BF,EAAYD,IAYlB,OATE7C,qBAAU,WAGN,OAFA3D,OAAO6G,iBAAiB,mBAAoBH,GAC5C1G,OAAO6G,iBAAiB,sBAAuBD,GACxC,WACH5G,OAAO8G,oBAAoB,mBAAoBJ,GAC/C1G,OAAO8G,oBAAoB,sBAAuBF,MAEvD,IAGD,4BAAQ7C,UAAWjC,EAAQgE,QACrBU,EAASO,OACL,kBAACnD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAWjC,EAAQR,MAEzC0F,cAAIR,GAAU,SAAAF,GAAO,OACjB,kBAAC1C,EAAA,EAAD,CAAMqD,IAAKX,EAAQK,MAAO5C,UAAWjC,EAAQwE,QAASrB,MAAI,EAACC,GAAG,QAC5D,kBAACtD,EAAD,CAAagB,SAAU0D,SAKnC,kBAACtC,EAAA,EAAD,CAAOD,UAAWjC,EAAQL,OAA1B,iCAEE,kBAACyC,EAAA,EAAD,CAAgBC,MAAO,CAAEE,UAAW,WAApC,6DAGA,kBAACuB,EAAA,EAAD,CAAgBC,MAAM,YAAY9B,UAAWjC,EAAQsE,c,QCrDxD/E,EAnBD6F,YAAe,CACzBC,UAAW,CACPC,UAAW,CACPC,MAAM,CACFxB,MAAO,WAEXyB,MAAO,CACHzB,MAAO,WAEX0B,KAAM,CACF1B,MAAO,aAInB2B,QAAS,CACLC,KAAM,UCTdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAACC,EAAA,EAAD,CAAexG,MAAOA,GACpB,kBAAC,EAAD,QAGNyG,SAASC,eAAe,SLoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvF,QAAQuF,MAAMA,EAAMC,c","file":"static/js/main.bd61a6e1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nexport default function GamepadIcon() {\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            x='0'\n            y='0'\n            enableBackground='new 0 0 58.189 58.189'\n            version='1.1'\n            viewBox='0 0 58.189 58.189'\n            width='350px'\n            height='350px'\n            xmlSpace='preserve'\n        >\n            <path\n                fill='#38454F'\n                d='M29.095 39.268h9.446c1.701 0 3.346.609 4.638 1.716l9.128 7.828c.611.524 1.505.614 2.184.183 9.496-6.01-2.022-29.728-4.305-34.034-.242-.457-.641-2.936-1.126-3.113l-7.676-2.791a2.248 2.248 0 00-2.017.242s-2.164 1.383-2.649 1.383H21.744c-.485 0-2.921-1.383-2.921-1.383a2.25 2.25 0 00-2.017-.242L9.13 11.848c-.486.177-.884 2.656-1.126 3.113-2.283 4.306-13.801 28.024-4.305 34.034.68.43 1.574.34 2.184-.183l9.128-7.828a7.129 7.129 0 014.638-1.716h9.446z'\n            ></path>\n            <circle cx='36.786' cy='30.268' r='4' fill='#546A79'></circle>\n            <circle cx='13.786' cy='20.268' r='4' fill='#546A79'></circle>\n            <circle cx='43.786' cy='16.268' r='2' fill='#EBBA16'></circle>\n            <circle cx='39.786' cy='20.268' r='2' fill='#7383BF'></circle>\n            <circle cx='47.786' cy='20.268' r='2' fill='#D75A4A'></circle>\n            <circle cx='43.786' cy='24.268' r='2' fill='#61B872'></circle>\n            <path\n                fill='#AFB6BB'\n                d='M31.786 11.712c0-.192-.019-.38-.054-.561a1.077 1.077 0 00-.215-.469h-2.479c-.085.007-.165.03-.251.03-.087 0-.167-.022-.251-.03h-2.489a1 1 0 00-.192.4 3.007 3.007 0 000 1.271 3.014 3.014 0 002.404 2.314 3.002 3.002 0 003.527-2.955z'\n            ></path>\n            <path\n                fill='#546A79'\n                d='M27.286 27.921H24v-3.286a.714.714 0 00-.714-.714h-2.571a.714.714 0 00-.714.714v3.286h-3.286a.714.714 0 00-.714.714v2.571c0 .395.32.714.714.714H20v3.286c0 .395.32.714.714.714h2.571c.395 0 .714-.32.714-.714V31.92h3.286c.395 0 .714-.32.714-.714v-2.571a.713.713 0 00-.713-.714z'\n            ></path>\n        </svg>\n    );\n}","import React, { useState, useEffect } from 'react';\n\nimport {\n    Grid, Slider, Button, Switch, FormControlLabel,\n    makeStyles, Paper, Typography, LinearProgress, FormHelperText\n} from '@material-ui/core';\n\nimport GamepadIcon from './GamepadIcon'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '550px',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    paper: {\n        padding: '0 40px 25px 40px'\n    },\n    button: {\n        width: '110px'\n    },\n}));\n\nexport default function GamepadItem(props) {\n    const classes = useStyles();\n\n    const [state, setState] = useState({\n        delay: 0,\n        duration: 1000,\n        weakMagnitude: 0,\n        strongMagnitude: 1.0,\n        isNeedRepeat: false,\n        pressedButtons: []\n    });\n\n    const [pulseInterval, setPulseInterval] = useState(null);\n    const [isStarted, setIsStarted] = useState(false);\n    // const [pressedButtons, setPressedButtons] = useState([]);\n\n    const { instance } = props;\n    const { delay, duration, weakMagnitude, strongMagnitude, isNeedRepeat } = state;\n\n    const pulse = () => {\n        const pulseParams = {\n            startDelay: delay,\n            duration: duration,\n            weakMagnitude: weakMagnitude,\n            strongMagnitude: strongMagnitude\n        };\n        console.log('Vibration pulse started with parameters: %o', pulseParams);\n        return instance.vibrationActuator.playEffect('dual-rumble', pulseParams);\n    };\n\n    const handleStart = () => {\n        if (isNeedRepeat) {\n            handleStop();\n            pulse();\n            setPulseInterval(setInterval(pulse, 0.6 * duration));\n            setIsStarted(true);\n        } else {\n            pulse();\n        }\n    };\n\n    const handleStop = () => {\n        pulseInterval && clearInterval(pulseInterval);\n        setIsStarted(false);\n    };\n\n    const handleChange = (name, value) => {\n        setState({ ...state, [name]: value });\n        if (isStarted) {\n            handleStop();\n            handleStart();\n        }\n    };\n\n    useEffect(() => {\n        /*\n            const buttonsObserver = setInterval(() => {\n                const buttons = [];\n                each(navigator.getGamepads()[instance.index].buttons, (button, index) => {\n                    button.pressed && buttons.push({ index, button });\n                });\n                setPressedButtons(buttons);\n            }, 150);\n        */\n\n        return () => {\n            // buttonsObserver && clearInterval(buttonsObserver);\n            pulseInterval && clearInterval(pulseInterval);\n        }\n    }, []); // eslint-disable-line\n\n    return(\n        <Grid container spacing={3} className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container justify=\"center\">\n                    <GamepadIcon />\n                </Grid>\n\n                <FormHelperText style={{ marginBottom: '20px', textAlign: 'center' }}>{instance.id}</FormHelperText>\n\n                <Typography gutterBottom>Delay: {delay} ms</Typography>\n                <Slider aria-labelledby=\"input-slider\"\n                        value={delay} defaultValue={0} step={10} min={0} max={2000}\n                        onChange={(e, value) => handleChange(\"delay\", value)} />\n\n                <Typography gutterBottom>Duration: {duration} ms</Typography>\n                <Slider aria-labelledby=\"input-slider\"\n                        value={duration} defaultValue={1000} step={100} min={100} max={5000}\n                        onChange={(e, value) => handleChange(\"duration\", value)} />\n\n                <Typography gutterBottom>Weak magnitude</Typography>\n                <Slider aria-labelledby=\"input-slider\"\n                        value={weakMagnitude} defaultValue={1} step={0.01} min={0} max={1}\n                        onChange={(e, value) => handleChange(\"weakMagnitude\", value)}/>\n\n                <Typography gutterBottom>Strong magnitude</Typography>\n                <Slider aria-labelledby=\"input-slider\"\n                        value={strongMagnitude} defaultValue={1} step={0.01} min={0} max={1}\n                        onChange={(e, value) => handleChange(\"strongMagnitude\", value)} />\n\n                <Grid container className={classes.root} spacing={2}>\n                    <Grid item xs={5}>\n                        <FormControlLabel\n                            control={<Switch checked={isNeedRepeat} disabled={isStarted} onChange={() => handleChange(\"isNeedRepeat\", !isNeedRepeat)}/>}\n                            label=\"Interval repeat\"\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button className={classes.button} variant=\"contained\" onClick={handleStart} disabled={isStarted}>Start</Button>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button className={classes.button} variant=\"contained\" onClick={handleStop} disabled={!isStarted}>Stop</Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                        { isStarted &&\n                            <LinearProgress color=\"secondary\" />\n                        }\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { map } from 'lodash';\nimport {makeStyles, Paper, LinearProgress, FormHelperText, Grid} from '@material-ui/core';\n\nimport GamepadItem from './Components/GamepadItem';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        backgroundColor: '#282c34',\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white'\n    },\n    root: {\n        width: '1500px',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    paper: {\n        padding: '25px'\n    },\n    progress: {\n        margin: '20px 0 0 0'\n    },\n    gamepad: {\n        margin: '70px'\n    }\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    const [gamepads, setGamepads] = useState([]);\n\n    const handleGamepadConnected = (e) => {\n        console.log(`Gamepad connected at index ${ e.gamepad.index}`);\n        setGamepads([...gamepads, e.gamepad]);\n    };\n\n    const handleGamepadDisconnected = (e) => {\n        console.log(`Gamepad disconnected from index ${ e.gamepad.index}`);\n        delete gamepads[e.gamepad.index];\n        setGamepads(gamepads);\n    };\n\n    useEffect(() => {\n        window.addEventListener('gamepadconnected', handleGamepadConnected);\n        window.addEventListener('gamepaddisconnected', handleGamepadDisconnected);\n        return () => {\n            window.removeEventListener('gamepadconnected', handleGamepadConnected);\n            window.removeEventListener('gamepaddisconnected', handleGamepadDisconnected);\n        }\n    }, []); // eslint-disable-line\n\n  return (\n      <header className={classes.header}>\n          { gamepads.length\n              ? <Grid container spacing={0} className={classes.root}>\n                  {\n                      map(gamepads, gamepad =>\n                          <Grid key={gamepad.index} className={classes.gamepad} item xs=\"auto\">\n                            <GamepadItem instance={gamepad} />\n                          </Grid>\n                      )\n                  }\n                </Grid>\n              : <Paper className={classes.paper}>\n                  Waiting for gamepad connection\n                  <FormHelperText style={{ textAlign: 'center' }}>\n                      (If your gamepad is already connected - press any button)\n                  </FormHelperText>\n                  <LinearProgress color=\"secondary\" className={classes.progress} />\n                </Paper>\n          }\n      </header>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    overrides: {\n        MuiSlider: {\n            thumb:{\n                color: '#f50057',\n            },\n            track: {\n                color: '#f50057'\n            },\n            rail: {\n                color: '#f50057'\n            }\n        }\n    },\n    palette: {\n        type: 'dark'\n    },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}